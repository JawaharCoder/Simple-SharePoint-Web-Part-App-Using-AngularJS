{"version":3,"sources":["webparts/toDoWebPart/app/DataService.ts"],"names":[],"mappings":"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","file":"webparts/toDoWebPart/app/DataService.js","sourcesContent":["export interface ITodo {\n  id: number;\n  title: string;\n  done: boolean;\n}\n\ninterface ITodoItem {\n  Id: number;\n  Title: string;\n  Status: string;\n}\n\nexport interface IDataService {\n  getTodos(sharePointApi: string, todoListName: string, hideFinishedTasks: boolean): ng.IPromise<ITodo[]>;\n  addTodo(todo: string, sharePointApi: string, todoListName: string): ng.IPromise<{}>;\n  deleteTodo(todo: ITodo, sharePointApi: string, todoListName: string): ng.IPromise<{}>;\n  setTodoStatus(todo: ITodo, done: boolean, sharePointApi: string, todoListName: string): ng.IPromise<{}>;\n}\n\nexport default class DataService implements IDataService {\n  public static $inject: string[] = ['$q', '$http'];\n\n  constructor(private $q: ng.IQService, private $http: ng.IHttpService) {\n  }\n\n  public getTodos(sharePointApi: string, todoListName: string, hideFinishedTasks: boolean): ng.IPromise<ITodo[]> {\n    const deferred: ng.IDeferred<ITodo[]> = this.$q.defer();\n\n    /*let url: string =\n      `${sharePointApi}web/lists/getbytitle('${todoListName}')/items?$select=Id,Title,Status&$orderby=ID desc`;\n\n    if (hideFinishedTasks === true) {\n      url += \"&$filter=Status ne 'Completed'\";\n    }\n\n    this.$http({\n      url: url,\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json;odata=nometadata'\n      }\n    }).then((result: ng.IHttpPromiseCallbackArg<{ value: ITodoItem[] }>): void => {\n      const todos: ITodo[] = [];\n      for (let i: number = 0; i < result.data.value.length; i++) {\n        const todo: ITodoItem = result.data.value[i];\n        todos.push({\n          id: todo.Id,\n          title: todo.Title,\n          done: todo.Status === 'Completed'\n        });\n      }\n      deferred.resolve(todos);\n    });*/\n\t const todos: ITodo[] = [];\n\ttodos.push({\n          id: 1,\n          title: 'Sample',\n          done: true\n        });\n\t\t\n\t\ttodos.push({\n          id: 2,\n          title: 'Share',\n          done: false\n        });\n\t\t\n\t\ttodos.push({\n          id: 3,\n          title: 'Point',\n          done: false\n        });\n\t\t\n\t\ttodos.push({\n          id: 4,\n          title: 'Designs',\n          done: false\n        });\n\t\t\n\t\ttodos.push({\n          id: 5,\n          title: 'Site',\n          done: false\n        });\n\t\t\n\t\ttodos.push({\n          id: 1,\n          title: 'Sample',\n          done: true\n        });\ndeferred.resolve(todos);\n    return deferred.promise;\n  }\n\n  public addTodo(todo: string, sharePointApi: string, todoListName: string): ng.IPromise<{}> {\n    const deferred: ng.IDeferred<{}> = this.$q.defer();\n\n    this.$http({\n      url: sharePointApi + 'contextinfo',\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json;odata=nometadata'\n      }\n    }).then((digestResult: ng.IHttpPromiseCallbackArg<{ FormDigestValue: string }>): void => {\n      const requestDigest: string = digestResult.data.FormDigestValue;\n      const body: string = JSON.stringify({\n        '__metadata': {\n          'type': 'SP.Data.' +\n            todoListName.charAt(0).toUpperCase() +\n            todoListName.slice(1) + 'ListItem'\n          },\n        'Title': todo\n      });\n      this.$http({\n        url: sharePointApi + 'web/lists/getbytitle(\\'' + todoListName + '\\')/items',\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json;odata=nometadata',\n          'Content-type': 'application/json;odata=verbose',\n          'X-RequestDigest': requestDigest\n        },\n        data: body\n      }).then((result: ng.IHttpPromiseCallbackArg<{}>): void => {\n        deferred.resolve();\n      });\n    });\n\n    return deferred.promise;\n  }\n\n  public deleteTodo(todo: ITodo, sharePointApi: string, todoListName: string): ng.IPromise<{}> {\n    const deferred: ng.IDeferred<{}> = this.$q.defer();\n\n    this.$http({\n      url: sharePointApi + 'contextinfo',\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json;odata=nometadata'\n      }\n    }).then((digestResult: ng.IHttpPromiseCallbackArg<{ FormDigestValue: string }>): void => {\n      const requestDigest: string = digestResult.data.FormDigestValue;\n      this.$http({\n        url: sharePointApi + 'web/lists/getbytitle(\\'' + todoListName + '\\')/items(' + todo.id + ')',\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json;odata=nometadata',\n          'X-RequestDigest': requestDigest,\n          'IF-MATCH': '*',\n          'X-HTTP-Method': 'DELETE'\n        }\n      }).then((result: ng.IHttpPromiseCallbackArg<{}>): void => {\n        deferred.resolve();\n      });\n    });\n\n    return deferred.promise;\n  }\n\n  public setTodoStatus(todo: ITodo, done: boolean, sharePointApi: string, todoListName: string): ng.IPromise<{}> {\n    const deferred: ng.IDeferred<{}> = this.$q.defer();\n\n    this.$http({\n      url: sharePointApi + 'contextinfo',\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json;odata=nometadata'\n      }\n    }).then((digestResult: ng.IHttpPromiseCallbackArg<{ FormDigestValue: string }>): void => {\n      const requestDigest: string = digestResult.data.FormDigestValue;\n      const body: string = JSON.stringify({\n        '__metadata': {\n          'type': 'SP.Data.' +\n            todoListName.charAt(0).toUpperCase() +\n            todoListName.slice(1) + 'ListItem'\n          },\n        'Status': done ? 'Completed' : 'Not started'\n      });\n      this.$http({\n        url: sharePointApi + 'web/lists/getbytitle(\\'' + todoListName + '\\')/items(' + todo.id + ')',\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json;odata=nometadata',\n          'Content-type': 'application/json;odata=verbose',\n          'X-RequestDigest': requestDigest,\n          'IF-MATCH': '*',\n          'X-HTTP-Method': 'MERGE'\n        },\n        data: body\n      }).then((result: ng.IHttpPromiseCallbackArg<{}>): void => {\n        deferred.resolve();\n      });\n    });\n\n    return deferred.promise;\n  }\n}\n"],"sourceRoot":"/src"}